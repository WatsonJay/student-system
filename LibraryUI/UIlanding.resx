<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="userlabel.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="passwordlabel.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="user.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="password.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="land.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="login.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="cancle.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="head.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="usercheck.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcAAAAdAAAAJkAAACZAAAAmQAA
        AJkAAACZAAAAYAAAAAAAAAAqAAAAhQAAAJkAAACZAAAAmQAAAJkAAACTAAAASAAAAAAAAAA6AAAAlQAA
        AJkAAACZAAAAmQAAAJkAAACNAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFAAAAJkAAADzAAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAADDAAAAAAAAAIkAAAD3AAAA/wAAAP8AAAD/AAAA/wAAAP0AAACTAAAAAAAA
        ALcAAAD9AAAA/wAAAP8AAAD/AAAA/wAAAPsAAABiAAAAAAAAAAAAAAAAAAAAAAAAABQAAACrAAAAxQAA
        AMUAAAA+AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAOEAAAAKAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAVgAAAM8AAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAeAAAAlwAA
        AP8AAACvAAAArwAAAIkAAABmAAAAZgAAAGYAAABmAAAAUgAAAAAAAAAgAAAA1wAAAGoAAABmAAAAZgAA
        AGYAAABmAAAAPAAAAAAAAAAqAAAA4QAAAGoAAABmAAAAZgAAAGYAAABmAAAAKAAAAAAAAAAAAAAAGgAA
        AJUAAAD1AAAA/wAAAOsAAADrAAAA/wAAAP8AAAD/AAAA/wAAAP8AAADNAAAAAAAAAHoAAAD1AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAACZAAAAAAAAAKMAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAABmAAAAAAAA
        AAAAAABUAAAA7QAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAM0AAAAAAAAAmQAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAJkAAAAAAAAAzQAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AGYAAAAAAAAAAAAAAGYAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAzQAA
        AAAAAACZAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAmQAAAAAAAADNAAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAAZgAAAAAAAAAAAAAAZgAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAADNAAAAAAAAAJkAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAACZAAAAAAAAAM0AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAABmAAAAAAAAAAAAAABmAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAM0AAAAAAAAAmQAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAJkAAAAAAAAAzQAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAGYAAAAAAAAAAAAAAGYAAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAAzQAAAAAAAACZAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAmQAA
        AAAAAADNAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAZgAAAAAAAAAAAAAAZgAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAADNAAAAAAAAAJkAAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAACZAAAAAAAAAM0AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAABmAAAAAAAAAAAAAABmAAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAM0AAAAAAAAAmQAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAJkAAAAAAAAAzQAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAGYAAAAAAAAAAAAA
        AGYAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAzQAAAAAAAACZAAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAAmQAAAAAAAADNAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAZgAA
        AAAAAAAAAAAAZgAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAADNAAAAAAAA
        AJkAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAACZAAAAAAAAAM0AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAABmAAAAAAAAAAAAAABmAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AM0AAAAAAAAAmQAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAJkAAAAAAAAAzQAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAGYAAAAAAAAAAAAAAGYAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAAzQAAAAAAAACZAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAmQAAAAAAAADNAAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAAZgAAAAAAAAAAAAAAZgAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAADNAAAAAAAAAJkAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAACZAAAAAAAA
        AM0AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAABmAAAAAAAAAAAAAABmAAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAM0AAAAAAAAAmQAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AJkAAAAAAAAAzQAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAGYAAAAAAAAAAAAAAGYAAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAzQAAAAAAAACZAAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAAmQAAAAAAAADNAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAZgAAAAAAAAAAAAAAZgAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAADNAAAAAAAAAJkAAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAACZAAAAAAAAAM0AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAABmAAAAAAAA
        AAAAAABmAAAA/wAAAP8AAAD/AAAA4QAAAOEAAACLAAAAZgAAAGYAAABmAAAAZgAAAFIAAAAAAAAAbAAA
        APEAAABsAAAAZgAAAGYAAABmAAAAZgAAADwAAAAAAAAAkQAAAOEAAABqAAAAZgAAAGYAAABmAAAAZgAA
        ACgAAAAAAAAAAAAAAGYAAAD/AAAA/wAAAP8AAAClAAAApQAAADwAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAQAAAA0QAAAAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYAAAAzwAAAAYAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAZgAAAP8AAAD/AAAA/wAAANcAAADXAAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAADJAAAAAAAAAFwAAADrAAAA/wAAAP8AAAD/AAAA/wAAAP8AAACXAAAAAAAAAHoAAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP0AAABkAAAAAAAAAAAAAABmAAAA/wAAAP8AAAD/AAAA/wAAAOEAAADTAAAA1QAA
        ANUAAADVAAAA9wAAAJUAAAAWAAAArwAAANcAAADTAAAA1QAAANUAAADVAAAA8QAAAHAAAAAiAAAA1wAA
        AM8AAADVAAAA1QAAANUAAADfAAAA5QAAAEoAAAAAAAAAAAAAAGYAAAD/AAAA/wAAAP8AAADhAAAAlQAA
        AI8AAACLAAAAjwAAALcAAAC7AAAANAAAAIEAAAC9AAAAiQAAAJEAAACNAAAAjQAAAMUAAACXAAAAOgAA
        AJsAAAC3AAAAhQAAAI8AAACPAAAAiwAAAM8AAAB8AAAAEgAAAAAAAAAAAAAAZgAAAP8AAAD/AAAA6wAA
        AI8AAACFAAAAhQAAAIkAAACrAAAAuQAAADQAAAB+AAAAxwAAAIkAAACHAAAAgwAAAIcAAAC/AAAAqQAA
        ACgAAACZAAAAtwAAAIUAAACJAAAAhwAAAIcAAADTAAAAfgAAABAAAAAAAAAAAAAAAAAAAABmAAAA/wAA
        AOsAAAB8AAAAgQAAAIEAAACFAAAAqQAAALMAAAA4AAAAfgAAANEAAAB+AAAAgQAAAH4AAACJAAAAtwAA
        AJkAAAAoAAAAqQAAALsAAAB+AAAAgQAAAIEAAACNAAAAxwAAAH4AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AGIAAADbAAAAZgAAAEQAAABIAAAASAAAAJcAAACxAAAALgAAAGIAAADDAAAASgAAAEYAAABGAAAASgAA
        AK8AAACZAAAAHgAAAIcAAACxAAAASAAAAEgAAABEAAAAYAAAALcAAAB+AAAAEAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAJAAAAEIAAAAKAAAAAAAAAAAAAAAAAAAASgAAACgAAAAAAAAANgAAADoAAAAAAAAAAAAA
        AAAAAAAAAAAAUgAAAB4AAAAAAAAASgAAACgAAAAAAAAAAAAAAAAAAAASAAAATAAAABQAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA///////////+DgcD+AQCA/H+/3/g/v9/wAYCA8AEAgPABAIDwAQCA8AE
        AgPABAIDwAQCA8AEAgPABAIDwAQCA8AEAgPABAIDwAQCA8AEAgPABAIDwAQCA8D+/n/B/v9/wAYDA8AE
        BgPACAQHwBgID8g1Eh/ebye///////////8=
</value>
  </data>
</root>